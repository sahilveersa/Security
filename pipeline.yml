trigger:
- none

parameters:
- name: scanType
  displayName: Type of ZAP scan
  type: string
  default: 'baseline'
  values:
  - 'baseline'
  - 'full'

- name: reportTemplate
  displayName: ZAP Report Template
  type: string
  default: 'traditional-html'
  values:
  - traditional-html
  - traditional-json
  - sarif-json
  - traditional-pdf

- name: adminUrl
  displayName: Admin Application URL
  type: string
  default: 'https://qa.app-np.neovance.com/'

- name: agentUrl
  displayName: Agent Application URL
  type: string
  default: 'https://qa-agent.app-np.neovance.com/'

stages:
- stage: Auth_Login
  displayName: "Authenticate via Playwright"
  jobs:
  - job: PlaywrightLoginAdmin
    displayName: "Run Playwright login and save session (Admin)"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseNode@1
      inputs:
        version: '18.x'
    - script: |
        npm install -D @playwright/test
        npx playwright install --with-deps
        mkdir -p $(Build.ArtifactStagingDirectory)/auth
        node playwright-login.js \
          --url "${{ parameters.adminUrl }}" \
          --email "$(QA_ADMIN_EMAIL)" \
          --password "$(QA_ADMIN_PASSWORD)" \
          --mfaSecret "$(QA_ADMIN_MFA_SECRET)" \
          --output "$(Build.ArtifactStagingDirectory)/auth/admin-session.json"
      displayName: "Run Playwright login (Admin)"
    - publish: '$(Build.ArtifactStagingDirectory)/auth/admin-session.json'
      artifact: 'PlaywrightSessionAdmin'
      displayName: 'Publish Admin session.json'

  - job: PlaywrightLoginAgent
    displayName: "Run Playwright login and save session (Agent)"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseNode@1
      inputs:
        version: '18.x'
    - script: |
        npm install -D @playwright/test
        npx playwright install --with-deps
        mkdir -p $(Build.ArtifactStagingDirectory)/auth
        node playwright-login.js \
          --url "${{ parameters.agentUrl }}" \
          --email "$(QA_AGENT_EMAIL)" \
          --password "$(QA_AGENT_PASSWORD)" \
          --mfaSecret "$(QA_AGENT_MFA_SECRET)" \
          --output "$(Build.ArtifactStagingDirectory)/auth/agent-session.json"
      displayName: "Run Playwright login (Agent)"
    - publish: '$(Build.ArtifactStagingDirectory)/auth/agent-session.json'
      artifact: 'PlaywrightSessionAgent'
      displayName: 'Publish Agent session.json'

- stage: ZAP_Scan_Stage
  displayName: "Run ZAP Scan"
  dependsOn: Auth_Login
  jobs:

  - job: AdminScan
    displayName: "ZAP Scan - Admin"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: PlaywrightSessionAdmin
    - template: zap-template.yml
      parameters:
        targetUrl: ${{ parameters.adminUrl }}
        appName: 'admin'
        scanType: ${{ parameters.scanType }}
        reportTemplate: ${{ parameters.reportTemplate }}

  - job: AgentScan
    displayName: "ZAP Scan - Agent"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: PlaywrightSessionAgent
    - template: zap-template.yml
      parameters:
        targetUrl: ${{ parameters.agentUrl }}
        appName: 'agent'
        scanType: ${{ parameters.scanType }}
        reportTemplate: ${{ parameters.reportTemplate }}
