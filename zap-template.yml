# zap-template.yml
parameters:
  - name: targetUrl
    type: string
  - name: apiSpecUrl
    type: string
    default: ''
  - name: appName
    type: string
  - name: scanType
    type: string
  - name: reportTemplate
    type: string

steps:
- script: |
    echo "Starting ZAP Automation Framework Scan for ${{ parameters.appName }}..."
    mkdir -p $(Build.ArtifactStagingDirectory)/zap-reports
    cd $(Build.ArtifactStagingDirectory)/zap-reports

    # Choose URL for scan
    if [ "${{ parameters.scanType }}" = "api" ]; then
      TARGET_URL="${{ parameters.apiSpecUrl }}"
    else
      TARGET_URL="${{ parameters.targetUrl }}"
    fi

    # Generate Automation YAML dynamically
    echo "Generating automation.yaml..."
    cat > automation.yaml <<EOF
- type: scan
  parameters:
    url: $TARGET_URL
    scanPolicy: default
    scanType: ${{ parameters.scanType }}

- type: report
  parameters:
    template: ${{ parameters.reportTemplate }}
    reportDir: /zap/wrk/zap-reports
    reportFile: zap_${{ parameters.appName }}_${{ parameters.scanType }}_report.html
    displayReport: false
    risks:
      - high
      - medium
      - low
      - info
    confidences:
      - high
      - medium
      - low
      - falsepositive
EOF

    echo "Running ZAP in Docker with Automation Framework..."
    docker run --rm -v $(pwd):/zap/wrk:rw \
      ghcr.io/zaproxy/zaproxy:stable zap.sh -autorun /zap/wrk/automation.yaml

    echo "Reports generated:"
    ls -la $(Build.ArtifactStagingDirectory)/zap-reports

  displayName: "Run ZAP Automation Framework Scan"

- publish: '$(Build.ArtifactStagingDirectory)/zap-reports'
  artifact: 'ZAP_Reports_${{ parameters.appName }}'
  displayName: 'Publish ZAP Scan Reports'
